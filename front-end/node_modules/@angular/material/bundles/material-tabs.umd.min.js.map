{"version":3,"file":"material-tabs.umd.min.js","sources":["../../src/lib/tabs/tab-nav-bar/tab-nav-bar.ts","../../src/lib/tabs/tabs-module.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/tabs/ink-bar.ts","../../src/lib/tabs/tab-content.ts","../../src/lib/tabs/tab-label.ts","../../src/lib/tabs/tab.ts","../../src/lib/tabs/tabs-animations.ts","../../src/lib/tabs/tab-body.ts","../../src/lib/tabs/tab-label-wrapper.ts","../../src/lib/tabs/tab-header.ts","../../src/lib/tabs/tab-group.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directionality} from '@angular/cdk/bidi';\nimport {Platform} from '@angular/cdk/platform';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CanColor, CanColorCtor,\n  CanDisable, CanDisableCtor,\n  CanDisableRipple, CanDisableRippleCtor,\n  HasTabIndex, HasTabIndexCtor,\n  MAT_RIPPLE_GLOBAL_OPTIONS,\n  mixinColor,\n  mixinDisabled,\n  mixinDisableRipple,\n  mixinTabIndex, RippleConfig,\n  RippleGlobalOptions,\n  RippleRenderer,\n  RippleTarget,\n  ThemePalette,\n} from '@angular/material/core';\nimport {merge, of as observableOf, Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport {MatInkBar} from '../ink-bar';\nimport {FocusMonitor} from '@angular/cdk/a11y';\n\n\n// Boilerplate for applying mixins to MatTabNav.\n/** @docs-private */\nexport class MatTabNavBase {\n  constructor(public _elementRef: ElementRef) {}\n}\nexport const _MatTabNavMixinBase: CanDisableRippleCtor & CanColorCtor & typeof MatTabNavBase =\n    mixinDisableRipple(mixinColor(MatTabNavBase, 'primary'));\n\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\n@Component({\n  moduleId: module.id,\n  selector: '[mat-tab-nav-bar]',\n  exportAs: 'matTabNavBar, matTabNav',\n  inputs: ['color', 'disableRipple'],\n  templateUrl: 'tab-nav-bar.html',\n  styleUrls: ['tab-nav-bar.css'],\n  host: {'class': 'mat-tab-nav-bar'},\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatTabNav extends _MatTabNavMixinBase\n    implements AfterContentChecked, AfterContentInit, CanColor, CanDisableRipple, OnDestroy {\n\n  /** Subject that emits when the component has been destroyed. */\n  private readonly _onDestroy = new Subject<void>();\n\n  private _activeLinkChanged: boolean;\n  private _activeLinkElement: ElementRef<HTMLElement> | null;\n\n  @ViewChild(MatInkBar) _inkBar: MatInkBar;\n\n  /** Query list of all tab links of the tab navigation. */\n  @ContentChildren(forwardRef(() => MatTabLink), {descendants: true})\n  _tabLinks: QueryList<MatTabLink>;\n\n  /** Background color of the tab nav. */\n  @Input()\n  get backgroundColor(): ThemePalette { return this._backgroundColor; }\n  set backgroundColor(value: ThemePalette) {\n    const nativeElement: HTMLElement = this._elementRef.nativeElement;\n\n    nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n\n    if (value) {\n      nativeElement.classList.add(`mat-background-${value}`);\n    }\n\n    this._backgroundColor = value;\n  }\n  private _backgroundColor: ThemePalette;\n\n  constructor(elementRef: ElementRef,\n              @Optional() private _dir: Directionality,\n              private _ngZone: NgZone,\n              private _changeDetectorRef: ChangeDetectorRef,\n              private _viewportRuler: ViewportRuler) {\n    super(elementRef);\n  }\n\n  /**\n   * Notifies the component that the active link has been changed.\n   * @breaking-change 8.0.0 `element` parameter to be removed.\n   */\n  updateActiveLink(element: ElementRef) {\n    // Note: keeping the `element` for backwards-compat, but isn't being used for anything.\n    // @breaking-change 8.0.0\n    this._activeLinkChanged = !!element;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  ngAfterContentInit(): void {\n    this._ngZone.runOutsideAngular(() => {\n      const dirChange = this._dir ? this._dir.change : observableOf(null);\n\n      return merge(dirChange, this._viewportRuler.change(10))\n          .pipe(takeUntil(this._onDestroy))\n          .subscribe(() => this._alignInkBar());\n    });\n  }\n\n  /** Checks if the active link has been changed and, if so, will update the ink bar. */\n  ngAfterContentChecked(): void {\n    if (this._activeLinkChanged) {\n      const activeTab = this._tabLinks.find(tab => tab.active);\n\n      this._activeLinkElement = activeTab ? activeTab._elementRef : null;\n      this._alignInkBar();\n      this._activeLinkChanged = false;\n    }\n  }\n\n  ngOnDestroy() {\n    this._onDestroy.next();\n    this._onDestroy.complete();\n  }\n\n  /** Aligns the ink bar to the active link. */\n  _alignInkBar(): void {\n    if (this._activeLinkElement) {\n      this._inkBar.show();\n      this._inkBar.alignToElement(this._activeLinkElement.nativeElement);\n    } else {\n      this._inkBar.hide();\n    }\n  }\n}\n\n\n// Boilerplate for applying mixins to MatTabLink.\nexport class MatTabLinkBase {}\nexport const _MatTabLinkMixinBase:\n    HasTabIndexCtor & CanDisableRippleCtor & CanDisableCtor & typeof MatTabLinkBase =\n        mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkBase)));\n\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\n@Directive({\n  selector: '[mat-tab-link], [matTabLink]',\n  exportAs: 'matTabLink',\n  inputs: ['disabled', 'disableRipple', 'tabIndex'],\n  host: {\n    'class': 'mat-tab-link',\n    '[attr.aria-current]': 'active',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.tabIndex]': 'tabIndex',\n    '[class.mat-tab-disabled]': 'disabled',\n    '[class.mat-tab-label-active]': 'active',\n  }\n})\nexport class MatTabLink extends _MatTabLinkMixinBase\n    implements OnDestroy, CanDisable, CanDisableRipple, HasTabIndex, RippleTarget {\n\n  /** Whether the tab link is active or not. */\n  protected _isActive: boolean = false;\n\n  /** Reference to the RippleRenderer for the tab-link. */\n  protected _tabLinkRipple: RippleRenderer;\n\n  /** Whether the ripples are globally disabled through the RippleGlobalOptions */\n  private _ripplesGloballyDisabled = false;\n\n  /** Whether the link is active. */\n  @Input()\n  get active(): boolean { return this._isActive; }\n  set active(value: boolean) {\n    if (value !== this._isActive) {\n      this._isActive = value;\n      this._tabNavBar.updateActiveLink(this._elementRef);\n    }\n  }\n\n  /**\n   * Ripple configuration for ripples that are launched on pointer down.\n   * @docs-private\n   */\n  rippleConfig: RippleConfig = {};\n\n  /**\n   * Whether ripples are disabled on interaction\n   * @docs-private\n   */\n  get rippleDisabled(): boolean {\n    return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n      this._ripplesGloballyDisabled;\n  }\n\n  constructor(private _tabNavBar: MatTabNav,\n              public _elementRef: ElementRef,\n              ngZone: NgZone,\n              platform: Platform,\n              @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS) globalOptions: RippleGlobalOptions,\n              @Attribute('tabindex') tabIndex: string,\n              /**\n               * @deprecated\n               * @breaking-change 8.0.0 `_focusMonitor` parameter to be made required.\n               */\n              private _focusMonitor?: FocusMonitor) {\n    super();\n\n    this._tabLinkRipple = new RippleRenderer(this, ngZone, _elementRef, platform);\n    this._tabLinkRipple.setupTriggerEvents(_elementRef.nativeElement);\n\n    this.tabIndex = parseInt(tabIndex) || 0;\n\n    if (globalOptions) {\n      // TODO(paul): Do not copy each option manually. Allow dynamic global option changes: #9729\n      this._ripplesGloballyDisabled = !!globalOptions.disabled;\n      this.rippleConfig = {\n        terminateOnPointerUp: globalOptions.terminateOnPointerUp,\n        animation: globalOptions.animation,\n      };\n    }\n\n    if (_focusMonitor) {\n      _focusMonitor.monitor(_elementRef);\n    }\n  }\n\n  ngOnDestroy() {\n    this._tabLinkRipple._removeTriggerEvents();\n\n    if (this._focusMonitor) {\n      this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ObserversModule} from '@angular/cdk/observers';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {MatInkBar} from './ink-bar';\nimport {MatTab} from './tab';\nimport {MatTabBody, MatTabBodyPortal} from './tab-body';\nimport {MatTabContent} from './tab-content';\nimport {MatTabGroup} from './tab-group';\nimport {MatTabHeader} from './tab-header';\nimport {MatTabLabel} from './tab-label';\nimport {MatTabLabelWrapper} from './tab-label-wrapper';\nimport {MatTabLink, MatTabNav} from './tab-nav-bar/tab-nav-bar';\nimport {A11yModule} from '@angular/cdk/a11y';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatCommonModule,\n    PortalModule,\n    MatRippleModule,\n    ObserversModule,\n    A11yModule,\n  ],\n  // Don't export all components because some are only to be used internally.\n  exports: [\n    MatCommonModule,\n    MatTabGroup,\n    MatTabLabel,\n    MatTab,\n    MatTabNav,\n    MatTabLink,\n    MatTabContent,\n  ],\n  declarations: [\n    MatTabGroup,\n    MatTabLabel,\n    MatTab,\n    MatInkBar,\n    MatTabLabelWrapper,\n    MatTabNav,\n    MatTabLink,\n    MatTabBody,\n    MatTabBodyPortal,\n    MatTabHeader,\n    MatTabContent,\n  ],\n})\nexport class MatTabsModule {}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef, Inject, InjectionToken, NgZone} from '@angular/core';\n\n\n/**\n * Interface for a a MatInkBar positioner method, defining the positioning and width of the ink\n * bar in a set of tabs.\n */\n// tslint:disable-next-line class-name Using leading underscore to denote internal interface.\nexport interface _MatInkBarPositioner {\n  (element: HTMLElement): { left: string, width: string };\n}\n\n/** Injection token for the MatInkBar's Positioner. */\nexport const _MAT_INK_BAR_POSITIONER =\n  new InjectionToken<_MatInkBarPositioner>('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n  });\n\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nexport function _MAT_INK_BAR_POSITIONER_FACTORY(): _MatInkBarPositioner {\n  const method = (element: HTMLElement) => ({\n    left: element ? (element.offsetLeft || 0) + 'px' : '0',\n    width: element ? (element.offsetWidth || 0) + 'px' : '0',\n  });\n\n  return method;\n}\n\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-ink-bar',\n  host: {\n    'class': 'mat-ink-bar',\n  },\n})\nexport class MatInkBar {\n  constructor(\n    private _elementRef: ElementRef<HTMLElement>,\n    private _ngZone: NgZone,\n    @Inject(_MAT_INK_BAR_POSITIONER) private _inkBarPositioner: _MatInkBarPositioner) { }\n\n  /**\n   * Calculates the styles from the provided element in order to align the ink-bar to that element.\n   * Shows the ink bar if previously set as hidden.\n   * @param element\n   */\n  alignToElement(element: HTMLElement) {\n    this.show();\n\n    if (typeof requestAnimationFrame !== 'undefined') {\n      this._ngZone.runOutsideAngular(() => {\n        requestAnimationFrame(() => this._setStyles(element));\n      });\n    } else {\n      this._setStyles(element);\n    }\n  }\n\n  /** Shows the ink bar. */\n  show(): void {\n    this._elementRef.nativeElement.style.visibility = 'visible';\n  }\n\n  /** Hides the ink bar. */\n  hide(): void {\n    this._elementRef.nativeElement.style.visibility = 'hidden';\n  }\n\n  /**\n   * Sets the proper styles to the ink bar element.\n   * @param element\n   */\n  private _setStyles(element: HTMLElement) {\n    const positions = this._inkBarPositioner(element);\n    const inkBar: HTMLElement = this._elementRef.nativeElement;\n\n    inkBar.style.left = positions.left;\n    inkBar.style.width = positions.width;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, TemplateRef} from '@angular/core';\n\n/** Decorates the `ng-template` tags and reads out the template from it. */\n@Directive({selector: '[matTabContent]'})\nexport class MatTabContent {\n  constructor(public template: TemplateRef<any>) { }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\nimport {CdkPortal} from '@angular/cdk/portal';\n\n/** Used to flag tab labels for use with the portal directive */\n@Directive({\n  selector: '[mat-tab-label], [matTabLabel]',\n})\nexport class MatTabLabel extends CdkPortal {}\n\n// TODO(devversion): workaround for https://github.com/angular/material2/issues/12760\n(MatTabLabel as any)['ctorParameters'] = () => (CdkPortal as any)['ctorParameters'];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {TemplatePortal} from '@angular/cdk/portal';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {CanDisable, CanDisableCtor, mixinDisabled} from '@angular/material/core';\nimport {Subject} from 'rxjs';\nimport {MatTabContent} from './tab-content';\nimport {MatTabLabel} from './tab-label';\n\n\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nexport class MatTabBase {}\nexport const _MatTabMixinBase: CanDisableCtor & typeof MatTabBase =\n    mixinDisabled(MatTabBase);\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-tab',\n  templateUrl: 'tab.html',\n  inputs: ['disabled'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'matTab',\n})\nexport class MatTab extends _MatTabMixinBase implements OnInit, CanDisable, OnChanges, OnDestroy {\n  /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n  @ContentChild(MatTabLabel) templateLabel: MatTabLabel;\n\n  /**\n   * Template provided in the tab content that will be used if present, used to enable lazy-loading\n   */\n  @ContentChild(MatTabContent, {read: TemplateRef}) _explicitContent: TemplateRef<any>;\n\n  /** Template inside the MatTab view that contains an `<ng-content>`. */\n  @ViewChild(TemplateRef) _implicitContent: TemplateRef<any>;\n\n  /** Plain text label for the tab, used when there is no template label. */\n  @Input('label') textLabel: string = '';\n\n  /** Aria label for the tab. */\n  @Input('aria-label') ariaLabel: string;\n\n  /**\n   * Reference to the element that the tab is labelled by.\n   * Will be cleared if `aria-label` is set at the same time.\n   */\n  @Input('aria-labelledby') ariaLabelledby: string;\n\n  /** Portal that will be the hosted content of the tab */\n  private _contentPortal: TemplatePortal | null = null;\n\n  /** @docs-private */\n  get content(): TemplatePortal | null {\n    return this._contentPortal;\n  }\n\n  /** Emits whenever the internal state of the tab changes. */\n  readonly _stateChanges = new Subject<void>();\n\n  /**\n   * The relatively indexed position where 0 represents the center, negative is left, and positive\n   * represents the right.\n   */\n  position: number | null = null;\n\n  /**\n   * The initial relatively index origin of the tab if it was created and selected after there\n   * was already a selected tab. Provides context of what position the tab should originate from.\n   */\n  origin: number | null = null;\n\n  /**\n   * Whether the tab is currently active.\n   */\n  isActive = false;\n\n  constructor(private _viewContainerRef: ViewContainerRef) {\n    super();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n      this._stateChanges.next();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._stateChanges.complete();\n  }\n\n  ngOnInit(): void {\n    this._contentPortal = new TemplatePortal(\n        this._explicitContent || this._implicitContent, this._viewContainerRef);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nexport const matTabsAnimations: {\n  readonly translateTab: AnimationTriggerMetadata;\n} = {\n  /** Animation translates a tab along the X axis. */\n  translateTab: trigger('translateTab', [\n    // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n    state('center, void, left-origin-center, right-origin-center', style({transform: 'none'})),\n\n    // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n    // in order to ensure that the element has a height before its state changes. This is\n    // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n    // not have a static height and is not rendered. See related issue: #9465\n    state('left', style({transform: 'translate3d(-100%, 0, 0)', minHeight: '1px'})),\n    state('right', style({transform: 'translate3d(100%, 0, 0)', minHeight: '1px'})),\n\n    transition('* => left, * => right, left => center, right => center',\n        animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')),\n    transition('void => left-origin-center', [\n      style({transform: 'translate3d(-100%, 0, 0)'}),\n      animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')\n    ]),\n    transition('void => right-origin-center', [\n      style({transform: 'translate3d(100%, 0, 0)'}),\n      animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')\n    ])\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Component,\n  ChangeDetectorRef,\n  Input,\n  Inject,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  ElementRef,\n  Directive,\n  Optional,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ComponentFactoryResolver,\n  ViewContainerRef,\n  forwardRef,\n  ViewChild,\n} from '@angular/core';\nimport {AnimationEvent} from '@angular/animations';\nimport {TemplatePortal, CdkPortalOutlet, PortalHostDirective} from '@angular/cdk/portal';\nimport {Directionality, Direction} from '@angular/cdk/bidi';\nimport {Subscription, Subject} from 'rxjs';\nimport {matTabsAnimations} from './tabs-animations';\nimport {startWith, distinctUntilChanged} from 'rxjs/operators';\n\n/**\n * These position states are used internally as animation states for the tab body. Setting the\n * position state to left, right, or center will transition the tab body from its current\n * position to its respective state. If there is not current position (void, in the case of a new\n * tab body), then there will be no transition animation to its state.\n *\n * In the case of a new tab body that should immediately be centered with an animating transition,\n * then left-origin-center or right-origin-center can be used, which will use left or right as its\n * psuedo-prior state.\n */\nexport type MatTabBodyPositionState =\n    'left' | 'center' | 'right' | 'left-origin-center' | 'right-origin-center';\n\n/**\n * The origin state is an internally used state that is set on a new tab body indicating if it\n * began to the left or right of the prior selected index. For example, if the selected index was\n * set to 1, and a new tab is created and selected at index 2, then the tab body would have an\n * origin of right because its index was greater than the prior selected index.\n */\nexport type MatTabBodyOriginState = 'left' | 'right';\n\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\n@Directive({\n  selector: '[matTabBodyHost]'\n})\nexport class MatTabBodyPortal extends CdkPortalOutlet implements OnInit, OnDestroy {\n  /** Subscription to events for when the tab body begins centering. */\n  private _centeringSub = Subscription.EMPTY;\n  /** Subscription to events for when the tab body finishes leaving from center position. */\n  private _leavingSub = Subscription.EMPTY;\n\n  constructor(\n    componentFactoryResolver: ComponentFactoryResolver,\n    viewContainerRef: ViewContainerRef,\n    @Inject(forwardRef(() => MatTabBody)) private _host: MatTabBody) {\n      super(componentFactoryResolver, viewContainerRef);\n  }\n\n  /** Set initial visibility or set up subscription for changing visibility. */\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this._centeringSub = this._host._beforeCentering\n      .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n      .subscribe((isCentering: boolean) => {\n        if (isCentering && !this.hasAttached()) {\n          this.attach(this._host._content);\n        }\n      });\n\n    this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n      this.detach();\n    });\n  }\n\n  /** Clean up centering subscription. */\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this._centeringSub.unsubscribe();\n    this._leavingSub.unsubscribe();\n  }\n}\n\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-tab-body',\n  templateUrl: 'tab-body.html',\n  styleUrls: ['tab-body.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [matTabsAnimations.translateTab],\n  host: {\n    'class': 'mat-tab-body',\n  },\n})\nexport class MatTabBody implements OnInit, OnDestroy {\n\n  /** Current position of the tab-body in the tab-group. Zero means that the tab is visible. */\n  private _positionIndex: number;\n\n  /** Subscription to the directionality change observable. */\n  private _dirChangeSubscription = Subscription.EMPTY;\n\n  /** Tab body position state. Used by the animation trigger for the current state. */\n  _position: MatTabBodyPositionState;\n\n  /** Emits when an animation on the tab is complete. */\n  _translateTabComplete = new Subject<AnimationEvent>();\n\n  /** Event emitted when the tab begins to animate towards the center as the active tab. */\n  @Output() readonly _onCentering: EventEmitter<number> = new EventEmitter<number>();\n\n  /** Event emitted before the centering of the tab begins. */\n  @Output() readonly _beforeCentering: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /** Event emitted before the centering of the tab begins. */\n  @Output() readonly _afterLeavingCenter: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /** Event emitted when the tab completes its animation towards the center. */\n  @Output() readonly _onCentered: EventEmitter<void> = new EventEmitter<void>(true);\n\n   /** The portal host inside of this container into which the tab body content will be loaded. */\n  @ViewChild(PortalHostDirective) _portalHost: PortalHostDirective;\n\n  /** The tab body content to display. */\n  @Input('content') _content: TemplatePortal;\n\n  /** Position that will be used when the tab is immediately becoming visible after creation. */\n  @Input() origin: number;\n\n  /** The shifted index position of the tab body, where zero represents the active center tab. */\n  @Input()\n  set position(position: number) {\n    this._positionIndex = position;\n    this._computePositionAnimationState();\n  }\n\n  constructor(private _elementRef: ElementRef<HTMLElement>,\n              @Optional() private _dir: Directionality,\n              /**\n               * @breaking-change 8.0.0 changeDetectorRef to be made required.\n               */\n              changeDetectorRef?: ChangeDetectorRef) {\n\n    if (this._dir && changeDetectorRef) {\n      this._dirChangeSubscription = this._dir.change.subscribe((dir: Direction) => {\n        this._computePositionAnimationState(dir);\n        changeDetectorRef.markForCheck();\n      });\n    }\n\n    // Ensure that we get unique animation events, because the `.done` callback can get\n    // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n    this._translateTabComplete.pipe(distinctUntilChanged((x, y) => {\n      return x.fromState === y.fromState && x.toState === y.toState;\n    })).subscribe(event => {\n      // If the transition to the center is complete, emit an event.\n      if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n        this._onCentered.emit();\n      }\n\n      if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n        this._afterLeavingCenter.emit();\n      }\n    });\n  }\n\n  /**\n   * After initialized, check if the content is centered and has an origin. If so, set the\n   * special position states that transition the tab from the left or right before centering.\n   */\n  ngOnInit() {\n    if (this._position == 'center' && this.origin != null) {\n      this._position = this._computePositionFromOrigin();\n    }\n  }\n\n  ngOnDestroy() {\n    this._dirChangeSubscription.unsubscribe();\n    this._translateTabComplete.complete();\n  }\n\n  _onTranslateTabStarted(event: AnimationEvent): void {\n    const isCentering = this._isCenterPosition(event.toState);\n    this._beforeCentering.emit(isCentering);\n    if (isCentering) {\n      this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n    }\n  }\n\n  /** The text direction of the containing app. */\n  _getLayoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Whether the provided position state is considered center, regardless of origin. */\n  _isCenterPosition(position: MatTabBodyPositionState|string): boolean {\n    return position == 'center' ||\n        position == 'left-origin-center' ||\n        position == 'right-origin-center';\n  }\n\n  /** Computes the position state that will be used for the tab-body animation trigger. */\n  private _computePositionAnimationState(dir: Direction = this._getLayoutDirection()) {\n    if (this._positionIndex < 0) {\n      this._position = dir == 'ltr' ? 'left' : 'right';\n    } else if (this._positionIndex > 0) {\n      this._position = dir == 'ltr' ? 'right' : 'left';\n    } else {\n      this._position = 'center';\n    }\n  }\n\n  /**\n   * Computes the position state based on the specified origin position. This is used if the\n   * tab is becoming visible immediately after creation.\n   */\n  private _computePositionFromOrigin(): MatTabBodyPositionState {\n    const dir = this._getLayoutDirection();\n\n    if ((dir == 'ltr' && this.origin <= 0) || (dir == 'rtl' && this.origin > 0)) {\n      return 'left-origin-center';\n    }\n\n    return 'right-origin-center';\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef} from '@angular/core';\nimport {CanDisable, CanDisableCtor, mixinDisabled} from '@angular/material/core';\n\n\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nexport class MatTabLabelWrapperBase {}\nexport const _MatTabLabelWrapperMixinBase: CanDisableCtor & typeof MatTabLabelWrapperBase =\n    mixinDisabled(MatTabLabelWrapperBase);\n\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\n@Directive({\n  selector: '[matTabLabelWrapper]',\n  inputs: ['disabled'],\n  host: {\n    '[class.mat-tab-disabled]': 'disabled',\n    '[attr.aria-disabled]': '!!disabled',\n  }\n})\nexport class MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase implements CanDisable {\n  constructor(public elementRef: ElementRef) {\n    super();\n  }\n\n  /** Sets focus on the wrapper element */\n  focus(): void {\n    this.elementRef.nativeElement.focus();\n  }\n\n  getOffsetLeft(): number {\n    return this.elementRef.nativeElement.offsetLeft;\n  }\n\n  getOffsetWidth(): number {\n    return this.elementRef.nativeElement.offsetWidth;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Direction, Directionality} from '@angular/cdk/bidi';\nimport {coerceNumberProperty} from '@angular/cdk/coercion';\nimport {END, ENTER, HOME, SPACE} from '@angular/cdk/keycodes';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {CanDisableRipple, CanDisableRippleCtor, mixinDisableRipple} from '@angular/material/core';\nimport {merge, of as observableOf, Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport {MatInkBar} from './ink-bar';\nimport {MatTabLabelWrapper} from './tab-label-wrapper';\nimport {FocusKeyManager} from '@angular/cdk/a11y';\n\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n\n// Boilerplate for applying mixins to MatTabHeader.\n/** @docs-private */\nexport class MatTabHeaderBase {}\nexport const _MatTabHeaderMixinBase: CanDisableRippleCtor & typeof MatTabHeaderBase =\n    mixinDisableRipple(MatTabHeaderBase);\n\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-tab-header',\n  templateUrl: 'tab-header.html',\n  styleUrls: ['tab-header.css'],\n  inputs: ['disableRipple'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'mat-tab-header',\n    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n  },\n})\nexport class MatTabHeader extends _MatTabHeaderMixinBase\n    implements AfterContentChecked, AfterContentInit, OnDestroy, CanDisableRipple {\n\n  @ContentChildren(MatTabLabelWrapper) _labelWrappers: QueryList<MatTabLabelWrapper>;\n  @ViewChild(MatInkBar) _inkBar: MatInkBar;\n  @ViewChild('tabListContainer') _tabListContainer: ElementRef;\n  @ViewChild('tabList') _tabList: ElementRef;\n\n  /** The distance in pixels that the tab labels should be translated to the left. */\n  private _scrollDistance = 0;\n\n  /** Whether the header should scroll to the selected index after the view has been checked. */\n  private _selectedIndexChanged = false;\n\n  /** Emits when the component is destroyed. */\n  private readonly _destroyed = new Subject<void>();\n\n  /** Whether the controls for pagination should be displayed */\n  _showPaginationControls = false;\n\n  /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n  _disableScrollAfter = true;\n\n  /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n  _disableScrollBefore = true;\n\n  /**\n   * The number of tab labels that are displayed on the header. When this changes, the header\n   * should re-evaluate the scroll position.\n   */\n  private _tabLabelCount: number;\n\n  /** Whether the scroll distance has changed and should be applied after the view is checked. */\n  private _scrollDistanceChanged: boolean;\n\n  /** Used to manage focus between the tabs. */\n  private _keyManager: FocusKeyManager<MatTabLabelWrapper>;\n\n  private _selectedIndex: number = 0;\n\n  /** The index of the active tab. */\n  @Input()\n  get selectedIndex(): number { return this._selectedIndex; }\n  set selectedIndex(value: number) {\n    value = coerceNumberProperty(value);\n    this._selectedIndexChanged = this._selectedIndex != value;\n    this._selectedIndex = value;\n\n    if (this._keyManager) {\n      this._keyManager.updateActiveItemIndex(value);\n    }\n  }\n\n  /** Event emitted when the option is selected. */\n  @Output() readonly selectFocusedIndex = new EventEmitter();\n\n  /** Event emitted when a label is focused. */\n  @Output() readonly indexFocused = new EventEmitter();\n\n  constructor(private _elementRef: ElementRef,\n              private _changeDetectorRef: ChangeDetectorRef,\n              private _viewportRuler: ViewportRuler,\n              @Optional() private _dir: Directionality,\n              // @breaking-change 8.0.0 `_ngZone` parameter to be made required.\n              private _ngZone?: NgZone) {\n    super();\n  }\n\n  ngAfterContentChecked(): void {\n    // If the number of tab labels have changed, check if scrolling should be enabled\n    if (this._tabLabelCount != this._labelWrappers.length) {\n      this._updatePagination();\n      this._tabLabelCount = this._labelWrappers.length;\n      this._changeDetectorRef.markForCheck();\n    }\n\n    // If the selected index has changed, scroll to the label and check if the scrolling controls\n    // should be disabled.\n    if (this._selectedIndexChanged) {\n      this._scrollToLabel(this._selectedIndex);\n      this._checkScrollingControls();\n      this._alignInkBarToSelectedTab();\n      this._selectedIndexChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n\n    // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n    // then translate the header to reflect this.\n    if (this._scrollDistanceChanged) {\n      this._updateTabScrollPosition();\n      this._scrollDistanceChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  _handleKeydown(event: KeyboardEvent) {\n    switch (event.keyCode) {\n      case HOME:\n        this._keyManager.setFirstItemActive();\n        event.preventDefault();\n        break;\n      case END:\n        this._keyManager.setLastItemActive();\n        event.preventDefault();\n        break;\n      case ENTER:\n      case SPACE:\n        this.selectFocusedIndex.emit(this.focusIndex);\n        event.preventDefault();\n        break;\n      default:\n        this._keyManager.onKeydown(event);\n    }\n  }\n\n  /**\n   * Aligns the ink bar to the selected tab on load.\n   */\n  ngAfterContentInit() {\n    const dirChange = this._dir ? this._dir.change : observableOf(null);\n    const resize = this._viewportRuler.change(150);\n    const realign = () => {\n      this._updatePagination();\n      this._alignInkBarToSelectedTab();\n    };\n\n    this._keyManager = new FocusKeyManager(this._labelWrappers)\n      .withHorizontalOrientation(this._getLayoutDirection())\n      .withWrap();\n\n    this._keyManager.updateActiveItem(0);\n\n    // Defer the first call in order to allow for slower browsers to lay out the elements.\n    // This helps in cases where the user lands directly on a page with paginated tabs.\n    typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n\n    // On dir change or window resize, realign the ink bar and update the orientation of\n    // the key manager if the direction has changed.\n    merge(dirChange, resize).pipe(takeUntil(this._destroyed)).subscribe(() => {\n      realign();\n      this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n    });\n\n    // If there is a change in the focus key manager we need to emit the `indexFocused`\n    // event in order to provide a public event that notifies about focus changes. Also we realign\n    // the tabs container by scrolling the new focused tab into the visible section.\n    this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n      this.indexFocused.emit(newFocusIndex);\n      this._setTabFocus(newFocusIndex);\n    });\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /**\n   * Callback for when the MutationObserver detects that the content has changed.\n   */\n  _onContentChanges() {\n    const zoneCallback = () => {\n      this._updatePagination();\n      this._alignInkBarToSelectedTab();\n      this._changeDetectorRef.markForCheck();\n    };\n\n    // The content observer runs outside the `NgZone` by default, which\n    // means that we need to bring the callback back in ourselves.\n    // @breaking-change 8.0.0 Remove null check for `_ngZone` once it's a required parameter.\n    this._ngZone ? this._ngZone.run(zoneCallback) : zoneCallback();\n  }\n\n  /**\n   * Updating the view whether pagination should be enabled or not\n   */\n  _updatePagination() {\n    this._checkPaginationEnabled();\n    this._checkScrollingControls();\n    this._updateTabScrollPosition();\n  }\n\n  /** Tracks which element has focus; used for keyboard navigation */\n  get focusIndex(): number {\n    return this._keyManager ? this._keyManager.activeItemIndex! : 0;\n  }\n\n  /** When the focus index is set, we must manually send focus to the correct label */\n  set focusIndex(value: number) {\n    if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n      return;\n    }\n\n    this._keyManager.setActiveItem(value);\n  }\n\n  /**\n   * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n   * providing a valid index and return true.\n   */\n  _isValidIndex(index: number): boolean {\n    if (!this._labelWrappers) { return true; }\n\n    const tab = this._labelWrappers ? this._labelWrappers.toArray()[index] : null;\n    return !!tab && !tab.disabled;\n  }\n\n  /**\n   * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n   * scrolling is enabled.\n   */\n  _setTabFocus(tabIndex: number) {\n    if (this._showPaginationControls) {\n      this._scrollToLabel(tabIndex);\n    }\n\n    if (this._labelWrappers && this._labelWrappers.length) {\n      this._labelWrappers.toArray()[tabIndex].focus();\n\n      // Do not let the browser manage scrolling to focus the element, this will be handled\n      // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n      // should be the full width minus the offset width.\n      const containerEl = this._tabListContainer.nativeElement;\n      const dir = this._getLayoutDirection();\n\n      if (dir == 'ltr') {\n        containerEl.scrollLeft = 0;\n      } else {\n        containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n      }\n    }\n  }\n\n  /** The layout direction of the containing app. */\n  _getLayoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n  _updateTabScrollPosition() {\n    const scrollDistance = this.scrollDistance;\n    const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n\n    // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n    // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n    // and ripples will exceed the boundaries of the visible tab bar.\n    // See: https://github.com/angular/material2/issues/10276\n    this._tabList.nativeElement.style.transform = `translateX(${translateX}px)`;\n  }\n\n  /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n  get scrollDistance(): number { return this._scrollDistance; }\n  set scrollDistance(v: number) {\n    this._scrollDistance = Math.max(0, Math.min(this._getMaxScrollDistance(), v));\n\n    // Mark that the scroll distance has changed so that after the view is checked, the CSS\n    // transformation can move the header.\n    this._scrollDistanceChanged = true;\n    this._checkScrollingControls();\n  }\n\n  /**\n   * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n   * the end of the list, respectively). The distance to scroll is computed to be a third of the\n   * length of the tab list view window.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _scrollHeader(scrollDir: ScrollDirection) {\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n\n    // Move the scroll distance one-third the length of the tab list's viewport.\n    this.scrollDistance += (scrollDir == 'before' ? -1 : 1) * viewLength / 3;\n  }\n\n  /**\n   * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _scrollToLabel(labelIndex: number) {\n    const selectedLabel = this._labelWrappers ? this._labelWrappers.toArray()[labelIndex] : null;\n\n    if (!selectedLabel) { return; }\n\n    // The view length is the visible width of the tab labels.\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n\n    let labelBeforePos: number, labelAfterPos: number;\n    if (this._getLayoutDirection() == 'ltr') {\n      labelBeforePos = selectedLabel.getOffsetLeft();\n      labelAfterPos = labelBeforePos + selectedLabel.getOffsetWidth();\n    } else {\n      labelAfterPos = this._tabList.nativeElement.offsetWidth - selectedLabel.getOffsetLeft();\n      labelBeforePos = labelAfterPos - selectedLabel.getOffsetWidth();\n    }\n\n    const beforeVisiblePos = this.scrollDistance;\n    const afterVisiblePos = this.scrollDistance + viewLength;\n\n    if (labelBeforePos < beforeVisiblePos) {\n      // Scroll header to move label to the before direction\n      this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n    } else if (labelAfterPos > afterVisiblePos) {\n      // Scroll header to move label to the after direction\n      this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n    }\n  }\n\n  /**\n   * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n   * tab list is wider than the size of the header container, then the pagination controls should\n   * be shown.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _checkPaginationEnabled() {\n    const isEnabled =\n        this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n\n    if (!isEnabled) {\n      this.scrollDistance = 0;\n    }\n\n    if (isEnabled !== this._showPaginationControls) {\n      this._changeDetectorRef.markForCheck();\n    }\n\n    this._showPaginationControls = isEnabled;\n  }\n\n  /**\n   * Evaluate whether the before and after controls should be enabled or disabled.\n   * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n   * before button. If the header is at the end of the list (scroll distance is equal to the\n   * maximum distance we can scroll), then disable the after button.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _checkScrollingControls() {\n    // Check if the pagination arrows should be activated.\n    this._disableScrollBefore = this.scrollDistance == 0;\n    this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n   * is equal to the difference in width between the tab list container and tab header container.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _getMaxScrollDistance(): number {\n    const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    return (lengthOfTabList - viewLength) || 0;\n  }\n\n  /** Tells the ink-bar to align itself to the current label wrapper */\n  _alignInkBarToSelectedTab(): void {\n    const selectedLabelWrapper = this._labelWrappers && this._labelWrappers.length ?\n        this._labelWrappers.toArray()[this.selectedIndex].elementRef.nativeElement :\n        null;\n\n    this._inkBar.alignToElement(selectedLabelWrapper!);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty, coerceNumberProperty} from '@angular/cdk/coercion';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CanColor,\n  CanColorCtor,\n  CanDisableRipple,\n  CanDisableRippleCtor,\n  mixinColor,\n  mixinDisableRipple,\n  ThemePalette,\n} from '@angular/material/core';\nimport {merge, Subscription} from 'rxjs';\nimport {MatTab} from './tab';\nimport {MatTabHeader} from './tab-header';\n\n\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n\n/** A simple change event emitted on focus or selection changes. */\nexport class MatTabChangeEvent {\n  /** Index of the currently-selected tab. */\n  index: number;\n  /** Reference to the currently-selected tab. */\n  tab: MatTab;\n}\n\n/** Possible positions for the tab header. */\nexport type MatTabHeaderPosition = 'above' | 'below';\n\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nexport class MatTabGroupBase {\n  constructor(public _elementRef: ElementRef) {}\n}\nexport const _MatTabGroupMixinBase: CanColorCtor & CanDisableRippleCtor & typeof MatTabGroupBase =\n    mixinColor(mixinDisableRipple(MatTabGroupBase), 'primary');\n\n/**\n * Material design tab-group component.  Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-tab-group',\n  exportAs: 'matTabGroup',\n  templateUrl: 'tab-group.html',\n  styleUrls: ['tab-group.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['color', 'disableRipple'],\n  host: {\n    'class': 'mat-tab-group',\n    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\n  },\n})\nexport class MatTabGroup extends _MatTabGroupMixinBase implements AfterContentInit,\n    AfterContentChecked, OnDestroy, CanColor, CanDisableRipple {\n\n  @ContentChildren(MatTab) _tabs: QueryList<MatTab>;\n\n  @ViewChild('tabBodyWrapper') _tabBodyWrapper: ElementRef;\n\n  @ViewChild('tabHeader') _tabHeader: MatTabHeader;\n\n  /** The tab index that should be selected after the content has been checked. */\n  private _indexToSelect: number | null = 0;\n\n  /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n  private _tabBodyWrapperHeight: number = 0;\n\n  /** Subscription to tabs being added/removed. */\n  private _tabsSubscription = Subscription.EMPTY;\n\n  /** Subscription to changes in the tab labels. */\n  private _tabLabelSubscription = Subscription.EMPTY;\n\n  /** Whether the tab group should grow to the size of the active tab. */\n  @Input()\n  get dynamicHeight(): boolean { return this._dynamicHeight; }\n  set dynamicHeight(value: boolean) { this._dynamicHeight = coerceBooleanProperty(value); }\n  private _dynamicHeight: boolean = false;\n\n  /** The index of the active tab. */\n  @Input()\n  get selectedIndex(): number | null { return this._selectedIndex; }\n  set selectedIndex(value: number | null) {\n    this._indexToSelect = coerceNumberProperty(value, null);\n  }\n  private _selectedIndex: number | null = null;\n\n  /** Position of the tab header. */\n  @Input() headerPosition: MatTabHeaderPosition = 'above';\n\n  /** Background color of the tab group. */\n  @Input()\n  get backgroundColor(): ThemePalette { return this._backgroundColor; }\n  set backgroundColor(value: ThemePalette) {\n    const nativeElement: HTMLElement = this._elementRef.nativeElement;\n\n    nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n\n    if (value) {\n      nativeElement.classList.add(`mat-background-${value}`);\n    }\n\n    this._backgroundColor = value;\n  }\n  private _backgroundColor: ThemePalette;\n\n  /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n  @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n  /** Event emitted when focus has changed within a tab group. */\n  @Output() readonly focusChange: EventEmitter<MatTabChangeEvent> =\n      new EventEmitter<MatTabChangeEvent>();\n\n  /** Event emitted when the body animation has completed */\n  @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event emitted when the tab selection has changed. */\n  @Output() readonly selectedTabChange: EventEmitter<MatTabChangeEvent> =\n      new EventEmitter<MatTabChangeEvent>(true);\n\n  private _groupId: number;\n\n  constructor(elementRef: ElementRef,\n              private _changeDetectorRef: ChangeDetectorRef) {\n    super(elementRef);\n    this._groupId = nextId++;\n  }\n\n  /**\n   * After the content is checked, this component knows what tabs have been defined\n   * and what the selected index should be. This is where we can know exactly what position\n   * each tab should be in according to the new selected index, and additionally we know how\n   * a new selected tab should transition in (from the left or right).\n   */\n  ngAfterContentChecked() {\n    // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n    // the amount of tabs changes before the actual change detection runs.\n    const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n\n    // If there is a change in selected index, emit a change event. Should not trigger if\n    // the selected index has not yet been initialized.\n    if (this._selectedIndex != indexToSelect) {\n      const isFirstRun = this._selectedIndex == null;\n\n      if (!isFirstRun) {\n        this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n      }\n\n      // Changing these values after change detection has run\n      // since the checked content may contain references to them.\n      Promise.resolve().then(() => {\n        this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n\n        if (!isFirstRun) {\n          this.selectedIndexChange.emit(indexToSelect);\n        }\n      });\n    }\n\n    // Setup the position for each tab and optionally setup an origin on the next selected tab.\n    this._tabs.forEach((tab: MatTab, index: number) => {\n      tab.position = index - indexToSelect;\n\n      // If there is already a selected tab, then set up an origin for the next selected tab\n      // if it doesn't have one already.\n      if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n        tab.origin = indexToSelect - this._selectedIndex;\n      }\n    });\n\n    if (this._selectedIndex !== indexToSelect) {\n      this._selectedIndex = indexToSelect;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  ngAfterContentInit() {\n    this._subscribeToTabLabels();\n\n    // Subscribe to changes in the amount of tabs, in order to be\n    // able to re-render the content as new tabs are added or removed.\n    this._tabsSubscription = this._tabs.changes.subscribe(() => {\n      const indexToSelect = this._clampTabIndex(this._indexToSelect);\n\n      // Maintain the previously-selected tab if a new tab is added or removed and there is no\n      // explicit change that selects a different tab.\n      if (indexToSelect === this._selectedIndex) {\n        const tabs = this._tabs.toArray();\n\n        for (let i = 0; i < tabs.length; i++) {\n          if (tabs[i].isActive) {\n            // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n            // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n            // adding a tab within the `selectedIndexChange` event.\n            this._indexToSelect = this._selectedIndex = i;\n            break;\n          }\n        }\n      }\n\n      this._subscribeToTabLabels();\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  ngOnDestroy() {\n    this._tabsSubscription.unsubscribe();\n    this._tabLabelSubscription.unsubscribe();\n  }\n\n  /** Re-aligns the ink bar to the selected tab element. */\n  realignInkBar() {\n    if (this._tabHeader) {\n      this._tabHeader._alignInkBarToSelectedTab();\n    }\n  }\n\n  _focusChanged(index: number) {\n    this.focusChange.emit(this._createChangeEvent(index));\n  }\n\n  private _createChangeEvent(index: number): MatTabChangeEvent {\n    const event = new MatTabChangeEvent;\n    event.index = index;\n    if (this._tabs && this._tabs.length) {\n      event.tab = this._tabs.toArray()[index];\n    }\n    return event;\n  }\n\n  /**\n   * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n   * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n   * binding to be updated, we need to subscribe to changes in it and trigger change detection\n   * manually.\n   */\n  private _subscribeToTabLabels() {\n    if (this._tabLabelSubscription) {\n      this._tabLabelSubscription.unsubscribe();\n    }\n\n    this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges))\n      .subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n\n  /** Clamps the given index to the bounds of 0 and the tabs length. */\n  private _clampTabIndex(index: number | null): number {\n    // Note the `|| 0`, which ensures that values like NaN can't get through\n    // and which would otherwise throw the component into an infinite loop\n    // (since Math.max(NaN, 0) === NaN).\n    return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n  }\n\n  /** Returns a unique id for each tab label element */\n  _getTabLabelId(i: number): string {\n    return `mat-tab-label-${this._groupId}-${i}`;\n  }\n\n  /** Returns a unique id for each tab content element */\n  _getTabContentId(i: number): string {\n    return `mat-tab-content-${this._groupId}-${i}`;\n  }\n\n  /**\n   * Sets the height of the body wrapper to the height of the activating tab if dynamic\n   * height property is true.\n   */\n  _setTabBodyWrapperHeight(tabHeight: number): void {\n    if (!this._dynamicHeight || !this._tabBodyWrapperHeight) { return; }\n\n    const wrapper: HTMLElement = this._tabBodyWrapper.nativeElement;\n\n    wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n\n    // This conditional forces the browser to paint the height so that\n    // the animation to the new height can have an origin.\n    if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n      wrapper.style.height = tabHeight + 'px';\n    }\n  }\n\n  /** Removes the height of the tab body wrapper. */\n  _removeTabBodyWrapperHeight(): void {\n    const wrapper = this._tabBodyWrapper.nativeElement;\n    this._tabBodyWrapperHeight = wrapper.clientHeight;\n    wrapper.style.height = '';\n    this.animationDone.emit();\n  }\n\n  /** Handle click events, setting new selected index if appropriate. */\n  _handleClick(tab: MatTab, tabHeader: MatTabHeader, index: number) {\n    if (!tab.disabled) {\n      this.selectedIndex = tabHeader.focusIndex = index;\n    }\n  }\n\n  /** Retrieves the tabindex for the tab. */\n  _getTabIndex(tab: MatTab, idx: number): number | null {\n    if (tab.disabled) {\n      return null;\n    }\n    return this.selectedIndex === idx ? 0 : -1;\n  }\n}\n"],"names":["MatTabLink","decorators","type","Directive","args","exportAs","inputs","host","class","[attr.aria-current]","[attr.aria-disabled]","[attr.tabIndex]","[class.mat-tab-disabled]","[class.mat-tab-label-active]","NgZone","Platform","undefined","Optional","Inject","MAT_RIPPLE_GLOBAL_OPTIONS","String","Attribute","FocusMonitor","propDecorators","NgModule","imports","CommonModule","MatCommonModule","PortalModule","MatRippleModule","ObserversModule","A11yModule","exports","MatTabGroup","MatTabLabel","MatTab","MatTabNav","MatTabContent","declarations","MatInkBar","MatTabLabelWrapper","MatTabBody","MatTabBodyPortal","MatTabHeader","MatTabsModule","__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","_MAT_INK_BAR_POSITIONER_FACTORY","element","left","offsetLeft","width","offsetWidth","setPrototypeOf","__proto__","Array","p","hasOwnProperty","_MAT_INK_BAR_POSITIONER","InjectionToken","providedIn","factory","_elementRef","_ngZone","_inkBarPositioner","alignToElement","_this","show","requestAnimationFrame","runOutsideAngular","_setStyles","nativeElement","style","visibility","hide","positions","inkBar","selector","ElementRef","template","TemplateRef","tslib_1.__extends","_super","CdkPortal","MatTabBase","_MatTabMixinBase","mixinDisabled","_viewContainerRef","call","textLabel","_contentPortal","_stateChanges","Subject","position","origin","isActive","defineProperty","ngOnChanges","changes","next","ngOnDestroy","complete","ngOnInit","TemplatePortal","_explicitContent","_implicitContent","Component","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","ViewChild","Input","ariaLabel","ariaLabelledby","matTabsAnimations","translateTab","trigger","state","transform","minHeight","transition","animate","componentFactoryResolver","viewContainerRef","_host","_centeringSub","Subscription","EMPTY","_leavingSub","_beforeCentering","pipe","startWith","_isCenterPosition","_position","subscribe","isCentering","hasAttached","attach","_content","_afterLeavingCenter","detach","unsubscribe","ComponentFactoryResolver","ViewContainerRef","forwardRef","CdkPortalOutlet","_dir","changeDetectorRef","_dirChangeSubscription","_translateTabComplete","_onCentering","EventEmitter","_onCentered","change","dir","_computePositionAnimationState","markForCheck","distinctUntilChanged","x","y","fromState","toState","event","emit","_positionIndex","_computePositionFromOrigin","_onTranslateTabStarted","clientHeight","_getLayoutDirection","value","styles","animations","ChangeDetectorRef","Output","_portalHost","PortalHostDirective","MatTabLabelWrapperBase","_MatTabLabelWrapperMixinBase","elementRef","focus","getOffsetLeft","getOffsetWidth","MatTabHeaderBase","_MatTabHeaderMixinBase","mixinDisableRipple","_changeDetectorRef","_viewportRuler","_scrollDistance","_selectedIndexChanged","_destroyed","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","_selectedIndex","selectFocusedIndex","indexFocused","coerceNumberProperty","_keyManager","updateActiveItemIndex","ngAfterContentChecked","_tabLabelCount","_labelWrappers","length","_updatePagination","_scrollToLabel","_checkScrollingControls","_alignInkBarToSelectedTab","_scrollDistanceChanged","_updateTabScrollPosition","_handleKeydown","keyCode","HOME","setFirstItemActive","preventDefault","END","setLastItemActive","ENTER","SPACE","focusIndex","onKeydown","ngAfterContentInit","dirChange","observableOf","resize","realign","FocusKeyManager","withHorizontalOrientation","withWrap","updateActiveItem","merge","takeUntil","newFocusIndex","_setTabFocus","_onContentChanges","zoneCallback","run","_checkPaginationEnabled","_isValidIndex","setActiveItem","index","tab","toArray","disabled","tabIndex","containerEl","_tabListContainer","scrollLeft","scrollWidth","scrollDistance","translateX","_tabList","v","Math","max","min","_getMaxScrollDistance","_scrollHeader","scrollDir","viewLength","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","isEnabled","selectedLabelWrapper","selectedIndex","_inkBar","[class.mat-tab-header-pagination-controls-enabled]","[class.mat-tab-header-rtl]","ViewportRuler","Directionality","nextId","MatTabChangeEvent","MatTabGroupBase","_MatTabGroupMixinBase","mixinColor","_indexToSelect","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","_dynamicHeight","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","coerceBooleanProperty","_backgroundColor","classList","remove","backgroundColor","add","indexToSelect","_clampTabIndex","isFirstRun_1","_createChangeEvent","Promise","resolve","then","_tabs","forEach","_subscribeToTabLabels","tabs","i","realignInkBar","_tabHeader","_focusChanged","apply","map","_getTabLabelId","_getTabContentId","_setTabBodyWrapperHeight","tabHeight","wrapper","_tabBodyWrapper","height","offsetHeight","_removeTabBodyWrapperHeight","_handleClick","tabHeader","_getTabIndex","idx","[class.mat-tab-group-dynamic-height]","[class.mat-tab-group-inverted-header]","dynamicHeight","MatTabNavBase","_MatTabNavMixinBase","_onDestroy","updateActiveLink","_activeLinkChanged","_alignInkBar","activeTab","_tabLinks","find","active","_activeLinkElement","MatTabLinkBase","_MatTabLinkMixinBase","mixinTabIndex","_tabNavBar","_focusMonitor","_tabLinkRipple","setupTriggerEvents","parseInt","globalOptions","_ripplesGloballyDisabled","terminateOnPointerUp","animation","monitor","get","_isActive","enumerable","configurable","stopMonitoring"],"mappings":"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"}